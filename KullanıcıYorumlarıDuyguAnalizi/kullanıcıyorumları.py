# -*- coding: utf-8 -*-
"""KullanıcıYorumları

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kmNNNFb42LM-JxD6OeURSRyCoDJ1Tqc9

# BERT
"""

! pip install transformers

import torch
from transformers import AutoModel, AutoTokenizer
from sklearn.neural_network import MLPClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import classification_report
import pandas as pd

tokenizer = AutoTokenizer.from_pretrained("dbmdz/bert-base-turkish-cased")
bert = AutoModel.from_pretrained("dbmdz/bert-base-turkish-cased")

df = pd.read_csv('/content/drive/MyDrive/Miuul-NLP/magaza_yorumlari_duygu_analizi.csv', encoding="utf-16")
df = df.dropna()

df.head()

def get_embeddings(text):

  # Tokenize the text
  tokens = tokenizer(text, return_tensors='pt', padding=True, truncation=True, max_length=512)

  with torch.no_grad():
      # Get the output from BERT
      outputs = bert(**tokens)

  # The output will be a tuple containing various components, but the embeddings will be the first element
  embeddings = outputs.last_hidden_state

  return list(embeddings[0][0].cpu().numpy())

get_embeddings("Harika bir gün!")

X = df.iloc[:,0]
y = df.iloc[:,1]

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=42)

y_train

mapping = {'Olumsuz': 0, 'Tarafsız': 1, 'Olumlu': 2}

X_train_final = []
y_train_final = []

for text, label in zip(X_train, y_train):
  X_train_final.append(get_embeddings(text))
  y_train_final.append(mapping[label])

X_test_final = []
y_test_final = []

for text, label in zip(X_test, y_test):
  X_test_final.append(get_embeddings(text))
  y_test_final.append(mapping[label])

model = MLPClassifier(hidden_layer_sizes=(128, 64), max_iter=1000, activation='tanh', solver='adam', alpha=1e-5, learning_rate='constant',
                      verbose=1, early_stopping=True)
model.fit(X_train_final, y_train_final)
y_true, y_pred = y_test_final, model.predict(X_test_final)
print(classification_report(y_true, y_pred))

len(X_train_final[0])

len(X_test_final[0])

model.predict([get_embeddings("Puan kırmamın sebebi trendyol express kuryelerinin sorumsuzluğu yoksa ürün sorunsuz")])